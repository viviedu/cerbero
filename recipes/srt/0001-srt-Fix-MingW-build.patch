From 84ffa12097e5654ebf9ba957df076c4dcf147c02 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Olivier=20Cr=C3=AAte?= <olivier.crete@collabora.com>
Date: Mon, 30 Apr 2018 11:45:25 -0400
Subject: [PATCH 1/8] srt: Fix MingW build

---
 CMakeLists.txt       | 6 +++++-
 srtcore/api.h        | 6 +++++-
 srtcore/srt.h        | 8 ++++++++
 srtcore/srt_compat.h | 4 +++-
 4 files changed, 21 insertions(+), 3 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index daec198..fec872c 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -338,7 +338,7 @@ if (${ENABLE_PROFILE} AND HAVE_COMPILER_GNU_COMPAT)
 endif()
 
 if (MINGW)
-	set (PTHREAD_LIBRARY -lpthreadGC2)
+	#set (PTHREAD_LIBRARY -lpthreadGC2)
 	# XXX CONSIDER THIS. It came from a merged previous master version
 	# and was under an if(NOT MINGW)...elseif(THREADS_FOUND) condition.
 	# Might be that the current form still suffices; resolve this and remove comment.
@@ -461,6 +461,8 @@ if (srt_libspec_shared)
 	target_link_libraries(${TARGET_srt}_shared PRIVATE ${SSL_LIBRARIES})
 	if (MICROSOFT)
 		target_link_libraries(${TARGET_srt}_shared PRIVATE ws2_32.lib)
+	elseif (MINGW)
+		target_link_libraries(${TARGET_srt}_shared PRIVATE wsock32.lib ws2_32.lib)
 	endif()
 endif()
 
@@ -485,6 +487,8 @@ if (srt_libspec_static)
 	target_link_libraries(${TARGET_srt}_static PRIVATE ${SSL_LIBRARIES})
 	if (MICROSOFT)
 		target_link_libraries(${TARGET_srt}_static PRIVATE ws2_32.lib)
+	elseif (MINGW)
+		target_link_libraries(${TARGET_srt}_static PRIVATE wsock32.lib ws2_32.lib)
 	endif()
 endif()
 
diff --git a/srtcore/api.h b/srtcore/api.h
index e6e9d3f..0ab1726 100644
--- a/srtcore/api.h
+++ b/srtcore/api.h
@@ -271,13 +271,16 @@ inline std::string SockaddrToString(const sockaddr* sadr)
     std::ostringstream output;
     char hostbuf[1024];
 
-#if ENABLE_GETNAMEINFO
+#if ENABLE_GETNAMEINFO || defined(WIN32)
     if (!getnameinfo(sadr, sizeof(*sadr), hostbuf, 1024, NULL, 0, NI_NAMEREQD))
     {
         output << hostbuf;
     }
+#ifndef WIN32
     else
 #endif
+#endif
+#ifndef WIN32
     {
         if (inet_ntop(sadr->sa_family, addr, hostbuf, 1024) == NULL)
         {
@@ -285,6 +288,7 @@ inline std::string SockaddrToString(const sockaddr* sadr)
         }
         output << hostbuf;
     }
+#endif
 
     output << ":" << ntohs(((sockaddr_in*)sadr)->sin_port); // TRICK: sin_port and sin6_port have the same offset and size
     return output.str();
diff --git a/srtcore/srt.h b/srtcore/srt.h
index 636a7ed..bff01a0 100644
--- a/srtcore/srt.h
+++ b/srtcore/srt.h
@@ -36,6 +36,14 @@ written by
 
 
 #ifdef WIN32
+
+/* Obsolete way to define MINGW */
+#ifndef __MINGW__
+#if defined(__MINGW32__) || defined(__MINGW64__)
+#define __MINGW__ 1
+#endif
+#endif
+
    #ifndef __MINGW__
       // Explicitly define 32-bit and 64-bit numbers
       typedef __int32 int32_t;
diff --git a/srtcore/srt_compat.h b/srtcore/srt_compat.h
index 702324e..6def89d 100644
--- a/srtcore/srt_compat.h
+++ b/srtcore/srt_compat.h
@@ -20,6 +20,8 @@ written by
 #include <stddef.h>
 #include <time.h>
 
+#include "srt.h"
+
 #ifdef WIN32
    #ifndef __MINGW__
       #ifdef SRT_DYNAMIC
@@ -86,7 +88,7 @@ inline struct tm SysLocalTime(time_t tt)
 {
     struct tm tms;
     memset(&tms, 0, sizeof tms);
-#ifdef WIN32
+#if defined(WIN32) && !defined(__MINGW__)
 	errno_t rr = localtime_s(&tms, &tt);
 	if (rr == 0)
 		return tms;
-- 
2.23.0

